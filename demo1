import { Routes } from '@angular/router';
import { CreateHotel } from './features/hotel/create-hotel/hotel';
import  GetAllHotels  from './features/hotel/get-all-hotels/hotelList';
import { UpdateHotelComponent } from './features/hotel/update-hotel/hotel';
import { SearchHotelComponent } from './features/hotel/search-hotel/hotel';
import { FilterHotelComponent } from './features/hotel/filter-hotel/hotel';
import { Login } from './features/auth/login/login';
import { Register } from './features/auth/register/register';
import { WelcomeUser } from './features/user/welcome-user/welcome-user';
import { RoomComponent } from './features/room/gell-all-rooms/room';

export const routes: Routes = [
    {path: '', redirectTo: 'login', pathMatch: 'full'},
    {path: 'login', component: Login},
    {path: 'register', component: Register},
    {path: 'welcome', component: WelcomeUser},
    { path: 'create-hotel', component: CreateHotel },
    { path: 'hotels', component: GetAllHotels },
    { path: '', redirectTo: '/create-hotel', pathMatch: 'full' },
    { path: 'update-hotel', component: UpdateHotelComponent },
    { path:'search-hotel',component:SearchHotelComponent},
    {path:'filter-hotel',component:FilterHotelComponent},
    {path:'get-all-rooms',component:RoomComponent}
];




Perfect ЁЯСМ Anurag! ЁЯОп
рдЫрд╛рди тАФ "Get All Rooms" рдЖрддрд╛ рдЪрд╛рд▓реВ рдЭрд╛рд▓рдВрдп, рдореНрд╣рдгрдЬреЗ рддреБрдЭрдВ RoomComponent, RoomService рд╕рдЧрд│рдВ backend рд╢реА рдиреАрдЯ connect рдЭрд╛рд▓рдВ рдЖрд╣реЗ тЬЕ

рдЖрддрд╛ рдкреБрдврдЪрдВ step:
тЮбя╕П тАЬCreate RoomтАЭ тАФ рдореНрд╣рдгрдЬреЗ user (manager/admin) рдирд╡реАрди room add рдХрд░реВ рд╢рдХреЗрд▓.


---

ЁЯПЧя╕П Step-by-Step: Create Room (Angular + Spring Boot backend match)

рддреБрдЭреНрдпрд╛рдХрдбреЗ backend рд▓рд╛ рдЖрдзреАрдЪ рд╣реЗ рдЖрд╣реЗ ЁЯСЗ

тЬЕ RoomRequestDTO

@AllArgsConstructor
@NoArgsConstructor
public class RoomRequestDTO {
    @NotBlank(message = "Give a specific room type")
    private String type;

    @NotNull(message = "Price cannot be null")
    private double price;

    private boolean availability;

    @NotBlank(message = "Features cannot be null")
    private String features;

    @NotNull(message = "Hotel Id cannot be null")
    private Long hotelId;
}

рдЖрддрд╛ frontend рд╕рд╛рдареА matching part рдмрдирд╡реВ ЁЯСЗ


---

ЁЯзй 1. room-create.component.ts

ЁЯУВ src/app/features/room/create-room/room.component.ts

import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { RoomService } from '../../../core/services/roomservice';
import { HotelService } from '../../../core/services/hotelservice';

@Component({
  selector: 'app-create-room',
  templateUrl: './room.html',
  styleUrls: ['./room.css']
})
export class CreateRoomComponent implements OnInit {
  roomForm!: FormGroup;
  hotels: any[] = []; // For dropdown

  constructor(
    private fb: FormBuilder,
    private roomService: RoomService,
    private hotelService: HotelService
  ) {}

  ngOnInit(): void {
    this.roomForm = this.fb.group({
      type: ['', Validators.required],
      price: [0, [Validators.required, Validators.min(0)]],
      availability: [true],
      features: ['', Validators.required],
      hotelId: ['', Validators.required]
    });

    // Fetch hotels for dropdown
    this.hotelService.getHotelList().subscribe({
      next: (data) => (this.hotels = data),
      error: (err) => console.error(err)
    });
  }

  createRoom() {
    if (this.roomForm.invalid) return;
    const roomData = this.roomForm.value;

    this.roomService.createRoom(roomData).subscribe({
      next: (res) => {
        alert('Room created successfully тЬЕ');
        this.roomForm.reset();
      },
      error: (err) => {
        console.error(err);
        alert('Error creating room тЭМ');
      }
    });
  }
}


---

ЁЯз╛ 2. room.html

ЁЯУВ src/app/features/room/create-room/room.html

<div class="create-room-container">
  <h2>Create Room</h2>

  <form [formGroup]="roomForm" (ngSubmit)="createRoom()">
    <label>Room Type:</label>
    <input formControlName="type" placeholder="e.g. Deluxe, Suite" />

    <label>Price:</label>
    <input type="number" formControlName="price" />

    <label>Availability:</label>
    <select formControlName="availability">
      <option [value]="true">Available</option>
      <option [value]="false">Not Available</option>
    </select>

    <label>Features:</label>
    <textarea formControlName="features"></textarea>

    <label>Hotel:</label>
    <select formControlName="hotelId">
      <option *ngFor="let hotel of hotels" [value]="hotel.id">
        {{ hotel.name }}
      </option>
    </select>

    <button type="submit" [disabled]="roomForm.invalid">Create Room</button>
  </form>
</div>


---

ЁЯОи 3. room.css

ЁЯУВ src/app/features/room/create-room/room.css

.create-room-container {
  width: 400px;
  margin: 30px auto;
  padding: 20px;
  background: #f7f9fc;
  border-radius: 12px;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
}

.create-room-container h2 {
  text-align: center;
  margin-bottom: 20px;
}

label {
  display: block;
  font-weight: 600;
  margin-top: 10px;
}

input,
textarea,
select {
  width: 100%;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 6px;
  margin-top: 5px;
}

button {
  width: 100%;
  margin-top: 20px;
  background-color: #007bff;
  color: white;
  padding: 10px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
}

button:disabled {
  background-color: gray;
  cursor: not-allowed;
}


---

ЁЯФЧ 4. roomservice.ts рдордзреНрдпреЗ Create Room add рдХрд░рд╛

(рддреВ рдЖрдзреА рдмрдирд╡рд▓реЗрд▓реА RoomService file рдордзреНрдпреЗ рд╣реА method рдлрдХреНрдд add рдХрд░ЁЯСЗ)

createRoom(roomData: any): Observable<any> {
  return this.http.post(`${this.apiUrl}`, roomData);
}


---

ЁЯЫгя╕П 5. app.routes.ts рдордзреНрдпреЗ route рдЬреЛрдбрд╛

{ path: 'create-room', component: CreateRoomComponent }


---

тЬЕ 6. Test

1. Run backend тЖТ Spring Boot (8080)


2. Run frontend тЖТ Angular (ng serve)


3. Browser рдордзреНрдпреЗ тЖТ http://localhost:4200/create-room


4. Form рднрд░реВрди тЖТ тАЬCreate RoomтАЭ click рдХрд░рд╛ тЖТ success alert рдпреЗрдИрд▓ ЁЯОЙ




---

рд╣рд╡реЗ рддрд░ рдореА рддреБрд▓рд╛ ready folder structure (create-room folder рдкреВрд░реНрдг рей files) copy-paste рджреЗрдК рд╢рдХрддреЛ, Angular рдордзреНрдпреЗ рдкреЗрд╕реНрдЯ рдХреЗрд▓реНрдпрд╛рд╡рд░ рд▓рдЧреЗрдЪ рдЪрд╛рд▓реЗрд▓.
рджреЗрдК рдХрд╛?

