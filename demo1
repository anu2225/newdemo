‡§Ö‡§∞‡•á ‡§¨‡§∞‡§Ç! üëç
‡§Æ‡•ç‡§π‡§£‡§ú‡•á ‡§§‡•Å‡§≤‡§æ ‡§Ü‡§§‡§æ Create Hotel feature ‡§™‡•Å‡§®‡•ç‡§π‡§æ clean, standalone, folder-wise setup ‡§™‡§æ‡§π‡§ø‡§ú‡•á, ‡§ú‡§ø‡§•‡•á ‚Äúcomponents‚Äù ‡§∂‡§¨‡•ç‡§¶ ‡§µ‡§æ‡§™‡§∞‡§≤‡§æ ‡§®‡§æ‡§π‡•Ä ‡§Ü‡§£‡§ø route + import error-free ‡§∞‡§æ‡§π‡§§‡•Ä‡§≤.

‡§ö‡§≤, ‡§Æ‡•Ä ‡§§‡•Å‡§ù‡•ç‡§Ø‡§æ folder structure ‡§®‡•Å‡§∏‡§æ‡§∞ ‡§¶‡•á‡§§‡•ã:


---

1Ô∏è‚É£ Folder structure

src/
 ‚îî‚îÄ‚îÄ app/
      ‚îî‚îÄ‚îÄ features/
           ‚îî‚îÄ‚îÄ hotel/
                ‚îî‚îÄ‚îÄ create-hotel/
                     ‚îú‚îÄ‚îÄ create-hotel.ts
                     ‚îú‚îÄ‚îÄ create-hotel.html
                     ‚îî‚îÄ‚îÄ create-hotel.css


---

2Ô∏è‚É£ create-hotel.ts (standalone)

import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Component } from '@angular/core';
import { HotelService } from '../../core/services/hotel.service';
import { Router } from '@angular/router';

@Component({
  selector: 'app-create-hotel',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './create-hotel.html',
  styleUrls: ['./create-hotel.css']
})
export class CreateHotel {
  hotel = {
    hotelName: '',
    city: '',
    address: '',
    rating: 0
  };

  message = '';
  token = ''; // JWT token (login ‡§®‡§Ç‡§§‡§∞ localStorage ‡§Æ‡§ß‡•Ç‡§® ‡§ò‡•á‡§§‡§æ ‡§Ø‡•á‡§à‡§≤)

  constructor(private hotelService: HotelService, private router: Router) {}

  createHotel() {
    if (!this.hotel.hotelName || !this.hotel.city) {
      this.message = 'Please fill all fields!';
      return;
    }

    this.hotelService.createHotel(this.hotel, this.token).subscribe({
      next: () => {
        this.message = 'Hotel created successfully!';
        this.router.navigate(['/hotels']); // Redirect to Get All Hotels page
      },
      error: () => {
        this.message = 'Something went wrong!';
      }
    });
  }
}


---

3Ô∏è‚É£ create-hotel.html

<div class="container">
  <h2>Add New Hotel</h2>

  <form (ngSubmit)="createHotel()">
    <label>Hotel Name:</label>
    <input type="text" [(ngModel)]="hotel.hotelName" name="hotelName" required />

    <label>City:</label>
    <input type="text" [(ngModel)]="hotel.city" name="city" required />

    <label>Address:</label>
    <input type="text" [(ngModel)]="hotel.address" name="address" required />

    <label>Rating:</label>
    <input type="number" [(ngModel)]="hotel.rating" name="rating" required />

    <button type="submit">Create Hotel</button>
  </form>

  <p class="message">{{ message }}</p>
</div>


---

4Ô∏è‚É£ create-hotel.css

.container {
  width: 400px;
  margin: 40px auto;
  padding: 20px;
  border-radius: 10px;
  background-color: #f8f9fa;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

label {
  display: block;
  margin-top: 10px;
  font-weight: 600;
}

input {
  width: 100%;
  padding: 8px;
  margin-top: 5px;
  border-radius: 5px;
  border: 1px solid #ccc;
}

button {
  width: 100%;
  margin-top: 15px;
  padding: 10px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.message {
  margin-top: 15px;
  text-align: center;
  font-weight: 600;
  color: green;
}


---

5Ô∏è‚É£ Route setup (app.routes.ts)

import { Routes } from '@angular/router';
import { CreateHotel } from './features/hotel/create-hotel/create-hotel';
import { GetAllHotels } from './features/hotel/get-all-hotels/get-all-hotels';

export const routes: Routes = [
  { path: 'create-hotel', component: CreateHotel },
  { path: 'hotels', component: GetAllHotels },
  { path: '', redirectTo: '/create-hotel', pathMatch: 'full' }
];


---

‚úÖ ‡§Ü‡§§‡§æ:

Browser ‡§Æ‡§ß‡•ç‡§Ø‡•á http://localhost:4200/create-hotel ‚Üí Create Hotel form

‡§´‡•â‡§∞‡•ç‡§Æ ‡§≠‡§∞‡•Ç‡§® submit ‚Üí backend call ‚Üí success ‚Üí /hotels redirect

‡§∏‡§ó‡§≥‡•á imports / paths folder structure ‡§®‡•Å‡§∏‡§æ‡§∞ ‡§Ü‡§π‡•á‡§§, TS2307 error ‡§®‡§æ‡§π‡•Ä



---

‡§§‡•Å‡§≤‡§æ ‡§π‡§µ‡§Ç ‡§Ö‡§∏‡§≤‡•ç‡§Ø‡§æ‡§∏ ‡§Æ‡•Ä Create ‚Üí Get All ‚Üí Update ‚Üí Delete full flow folder-wise ready ‡§ï‡§∞‡•Ç‡§® ‡§¶‡•á‡§ä ‡§∂‡§ï‡§§‡•ã, ‡§ú‡•á‡§£‡•á‡§ï‡§∞‡•Ç‡§® ‡§§‡•Å‡§Æ‡§ö‡•ç‡§Ø‡§æ Angular project ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§è‡§ï‡§¶‡§Æ plug-and-play ‡§∞‡§æ‡§π‡•Ä‡§≤.

‡§§‡•Ç ‡§π‡§µ‡§Ç‡§Ø ‡§ï‡§æ ‡§Æ‡•Ä ‡§§‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡•Å?

