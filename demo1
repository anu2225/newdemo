बापरे 🔥 — एकदम व्यवस्थित folder structure आहे तुझं 💪
आता मी तुझ्या दिलेल्या folder structure वरून final corrected reactive form Create Hotel module तयार करून देतो.
तुझं structure हे आहे 👇

frontend/
 └── src/
     └── app/
         ├── features/
         │   ├── auth/
         │   ├── hotel/
         │   │   ├── create-hotel/
         │   │   │   ├── hotel.ts
         │   │   │   ├── hotel.html
         │   │   │   └── hotel.css
         │   │   ├── get-all-hotels/
         │   │   │   ├── hotel.ts
         │   │   │   ├── hotel.html
         │   │   │   └── hotel.css
         │   │   └── services/
         │   │       └── hotel.service.ts
         │   └── user/
         ├── app.html
         ├── app.css
         ├── app.config.ts
         └── app.ts


---

✅ Step-by-step Correct Setup for Create Hotel (Reactive Form)


---

🧩 1️⃣ File: hotel.ts

📍Path: src/app/features/hotel/create-hotel/hotel.ts

import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { HotelService } from '../services/hotel.service';

@Component({
  selector: 'app-create-hotel',
  standalone: true,
  imports: [CommonModule, ReactiveFormsModule],
  templateUrl: './hotel.html',
  styleUrls: ['./hotel.css']
})
export class CreateHotel {
  hotelForm: FormGroup;
  message = '';

  constructor(private fb: FormBuilder, private hotelService: HotelService, private router: Router) {
    this.hotelForm = this.fb.group({
      name: ['', Validators.required],
      location: ['', Validators.required],
      amenities: ['', Validators.required],
      rating: [null, [Validators.required, Validators.max(5)]]
    });
  }

  onSubmit() {
    if (this.hotelForm.invalid) {
      this.message = 'Please fill all fields correctly!';
      return;
    }

    const token = localStorage.getItem('token') || '';
    this.hotelService.createHotel(this.hotelForm.value, token).subscribe({
      next: (res) => {
        this.message = 'Hotel created successfully!';
        this.router.navigate(['/hotels']);
      },
      error: (err) => {
        console.error(err);
        this.message = 'Something went wrong while creating hotel!';
      }
    });
  }
}


---

🪶 2️⃣ File: hotel.html

📍Path: src/app/features/hotel/create-hotel/hotel.html

<div class="container">
  <h2>Add New Hotel</h2>

  <form [formGroup]="hotelForm" (ngSubmit)="onSubmit()">
    <label>Hotel Name:</label>
    <input type="text" formControlName="name" />

    <label>Location:</label>
    <input type="text" formControlName="location" />

    <label>Amenities:</label>
    <input type="text" formControlName="amenities" />

    <label>Rating (1-5):</label>
    <input type="number" formControlName="rating" />

    <button type="submit">Create Hotel</button>
  </form>

  <p class="message">{{ message }}</p>
</div>


---

🎨 3️⃣ File: hotel.css

📍Path: src/app/features/hotel/create-hotel/hotel.css

.container {
  width: 400px;
  margin: 40px auto;
  padding: 20px;
  border-radius: 10px;
  background-color: #f8f9fa;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h2 {
  text-align: center;
}

label {
  display: block;
  margin-top: 10px;
  font-weight: 600;
}

input {
  width: 100%;
  padding: 8px;
  margin-top: 5px;
  border-radius: 5px;
  border: 1px solid #ccc;
}

button

