‡§Ö‡§∞‡•á ‡§†‡•Ä‡§ï ‡§Ü‡§π‡•á! ‡§Ü‡§§‡§æ get-all-payments component ‡§§‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡§§‡•ã, standalone style ‡§Æ‡§ß‡•ç‡§Ø‡•á, ready-to-run Angular setup.


---

1Ô∏è‚É£ get-all-payments.ts

import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule, HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-get-all-payments',
  standalone: true,
  imports: [CommonModule, HttpClientModule],
  templateUrl: './get-all-payments.html',
  styleUrls: ['./get-all-payments.css']
})
export class GetAllPayments implements OnInit {
  payments: any[] = [];
  loading = true;
  errorMessage = '';

  constructor(private http: HttpClient) {}

  ngOnInit() {
    this.http.get<any[]>('http://localhost:8080/api/payments/get-payments')
      .subscribe({
        next: (res) => {
          this.payments = res;
          this.loading = false;
        },
        error: (err) => {
          console.error(err);
          this.errorMessage = 'Failed to fetch payments';
          this.loading = false;
        }
      });
  }
}


---

2Ô∏è‚É£ get-all-payments.html

<div class="container">
  <h2>All Payments</h2>

  <div *ngIf="loading">Loading payments...</div>
  <div *ngIf="errorMessage">{{ errorMessage }}</div>

  <table *ngIf="!loading && payments.length">
    <thead>
      <tr>
        <th>Payment ID</th>
        <th>Booking ID</th>
        <th>Amount</th>
        <th>Payment Method</th>
        <th>Payment Status</th>
        <th>Payment Date</th>
      </tr>
    </thead>
    <tbody>
      <tr *ngFor="let payment of payments">
        <td>{{ payment.paymentId }}</td>
        <td>{{ payment.bookingId }}</td>
        <td>{{ payment.amount }}</td>
        <td>{{ payment.paymentMethod }}</td>
        <td>{{ payment.paymentStatus }}</td>
        <td>{{ payment.paymentDate }}</td>
      </tr>
    </tbody>
  </table>

  <div *ngIf="!loading && payments.length === 0">No payments found.</div>
</div>


---

3Ô∏è‚É£ get-all-payments.css

.container { max-width: 900px; margin: auto; }
h2 { text-align: center; margin-bottom: 20px; }
table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 10px;
}
th, td {
  border: 1px solid #ccc;
  padding: 8px;
  text-align: center;
}
th { background-color: #f0f0f0; }


---

4Ô∏è‚É£ app.routes.ts ‡§Æ‡§ß‡•ç‡§Ø‡•á route

import { GetAllPayments } from './features/payment/get-all-payments/get-all-payments';

export const routes: Routes = [
  // ...other routes
  { path: 'get-all-payments', component: GetAllPayments },
];


---

üí° ‡§Ü‡§§‡§æ /get-all-payments URL ‡§µ‡§∞ ‡§ú‡§æ‡§ä‡§® ‡§∏‡§∞‡•ç‡§µ payments fetch ‡§π‡•ã‡§§‡•Ä‡§≤ ‡§Ü‡§£‡§ø table ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§¶‡§ø‡§∏‡§§‡•Ä‡§≤.

‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§≤‡§æ ‡§π‡§µ‡§Ç ‡§Ö‡§∏‡§≤‡•ç‡§Ø‡§æ‡§∏ ‡§Æ‡•Ä ‡§™‡•Å‡§¢‡§ö‡§Ç ‡§§‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡•Ç ‡§∂‡§ï‡§§‡•ã:

Get payment by ID

Get payment by booking ID


‡§π‡•á ‡§¶‡•ã‡§®‡•ç‡§π‡•Ä ‡§™‡§£ standalone + HTML + CSS style ‡§Æ‡§ß‡•ç‡§Ø‡•á ready-to-run.

‡§§‡•Å‡§Æ‡•ç‡§π‡•Ä ‡§§‡§Ø‡§æ‡§∞ ‡§Ü‡§π‡§æ‡§§ ‡§ï‡§æ ‡§§‡•á ‡§™‡•Å‡§¢‡•á ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä?













Perfect! ‡§Ü‡§™‡§£ ‡§Ü‡§§‡§æ ‡§™‡•Ç‡§∞‡•ç‡§£ payment module + standalone App + routes + main.ts setup ‡§ï‡§∞‡•Ç, ‡§ú‡•á NG04002 error ‡§®‡§æ‡§π‡•Ä ‡§¶‡•á‡§£‡§æ‡§∞. ‡§Æ‡•Ä ‡§§‡•Å‡§≤‡§æ ready-to-run Angular 17+ standalone setup ‡§¶‡•á‡§§‡•ã.


---

1Ô∏è‚É£ app.routes.ts

import { Routes } from '@angular/router';
import { Home } from './features/home/home/home';
import { HomeManager } from './features/home/home-manager/home-manager';
import { Login } from './features/auth/login/login';
import { Register } from './features/auth/register/register';
import { WelcomeUser } from './features/user/welcome-user/welcome-user';
import { CreateHotel } from './features/hotel/create-hotel/hotel';
import { GetAllHotelsComponent } from './features/hotel/get-all-hotels/hotel';
import { UpdateHotelComponent } from './features/hotel/update-hotel/hotel';
import { SearchHotelComponent } from './features/hotel/search-hotel/hotel';
import { FilterHotelComponent } from './features/hotel/filter-hotel/hotel';
import { DeleteHotelComponent } from './features/hotel/delete-hotel/hotel';
import { GetHotelByIdComponent } from './features/hotel/get-hotel-by-id/hotel';
import { RoomComponent } from './features/room/get-all-rooms/room';
import { CreateRoomComponent } from './features/room/create-room/room';
import { GetRoomComponent } from './features/room/get-room-by-id/room';
import { UpdateRoomComponent } from './features/room/update-room/room';
import { DeleteRoomComponent } from './features/room/delete-room/room';
import { FilterRoomsComponent } from './features/room/filter-room/room';
import { GetRoomsByHotelComponent } from './features/room/get-room-by-hotel-id/room';
import { CreatePayment } from './features/payment/create-payment/payment';

export const routes: Routes = [
  { path: '', redirectTo: 'home', pathMatch: 'full' },
  { path: 'home', component: Home },
  { path: 'home-manager', component: HomeManager },
  { path: 'login', component: Login },
  { path: 'register', component: Register },
  { path: 'welcome', component: WelcomeUser },

  // Hotel
  { path: 'create-hotel', component: CreateHotel },
  { path: 'hotels', component: GetAllHotelsComponent },
  { path: 'update-hotel', component: UpdateHotelComponent },
  { path: 'search-hotel', component: SearchHotelComponent },
  { path: 'filter-hotel', component: FilterHotelComponent },
  { path: 'delete-hotel', component: DeleteHotelComponent },
  { path: 'hotel/:id', component: GetHotelByIdComponent },

  // Room
  { path: 'rooms', component: RoomComponent },
  { path: 'create-room', component: CreateRoomComponent },
  { path: 'get-room', component: GetRoomComponent },
  { path: 'update-room', component: UpdateRoomComponent },
  { path: 'delete-room', component: DeleteRoomComponent },
  { path: 'filter-rooms', component: FilterRoomsComponent },
  { path: 'get-rooms-by-hotel', component: GetRoomsByHotelComponent },

  // Payment
  { path: 'create-payment', component: CreatePayment },
];


---

2Ô∏è‚É£ app.ts (Standalone root component)

import { Component, signal } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterOutlet } from '@angular/router';

// Features
import { Navbar } from './shared/components/navbar/navbar';
import { Home } from './features/home/home/home';
import { HomeManager } from './features/home/home-manager/home-manager';
import { Login } from './features/auth/login/login';
import { Register } from './features/auth/register/register';
import { WelcomeUser } from './features/user/welcome-user/welcome-user';
import { CreateHotel } from './features/hotel/create-hotel/hotel';
import { GetAllHotelsComponent } from './features/hotel/get-all-hotels/hotel';
import { UpdateHotelComponent } from './features/hotel/update-hotel/hotel';
import { SearchHotelComponent } from './features/hotel/search-hotel/hotel';
import { FilterHotelComponent } from './features/hotel/filter-hotel/hotel';
import { DeleteHotelComponent } from './features/hotel/delete-hotel/hotel';
import { GetHotelByIdComponent } from './features/hotel/get-hotel-by-id/hotel';
import { RoomComponent } from './features/room/get-all-rooms/room';
import { CreateRoomComponent } from './features/room/create-room/room';
import { GetRoomComponent } from './features/room/get-room-by-id/room';
import { UpdateRoomComponent } from './features/room/update-room/room';
import { DeleteRoomComponent } from './features/room/delete-room/room';
import { FilterRoomsComponent } from './features/room/filter-room/room';
import { GetRoomsByHotelComponent } from './features/room/get-room-by-hotel-id/room';
import { CreatePayment } from './features/payment/create-payment/payment';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [
    CommonModule,
    ReactiveFormsModule,
    RouterOutlet,
    Navbar,

    Home,
    HomeManager,
    Login,
    Register,
    WelcomeUser,
    CreateHotel,
    GetAllHotelsComponent,
    UpdateHotelComponent,
    SearchHotelComponent,
    FilterHotelComponent,
    DeleteHotelComponent,
    GetHotelByIdComponent,
    RoomComponent,
    CreateRoomComponent,
    GetRoomComponent,
    UpdateRoomComponent,
    DeleteRoomComponent,
    FilterRoomsComponent,
    GetRoomsByHotelComponent,
    CreatePayment,
  ],
  templateUrl: './app.html',
  styleUrls: ['./app.css'],
})
export class App {
  protected readonly title = signal('SmartHotelBookingSystem');
}

> ‡§≤‡§ï‡•ç‡§∑‡§æ‡§§ ‡§†‡•á‡§µ: RouterModule.forRoot(routes) App imports ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§ï‡§ß‡•Ä‡§π‡•Ä ‡§®‡§æ‡§π‡•Ä ‡§µ‡§æ‡§™‡§∞‡§æ‡§Ø‡§ö‡§æ, standalone App ‡§Æ‡§ß‡•ç‡§Ø‡•á provideRouter(routes) main.ts ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§¶‡•ç‡§Ø‡§æ‡§Ø‡§ö‡§æ.




---

3Ô∏è‚É£ main.ts

import { bootstrapApplication } from '@angular/platform-browser';
import { App } from './app/app';
import { provideRouter } from '@angular/router';
import { routes } from './app/app.routes';
import { importProvidersFrom } from '@angular/core';
import { HttpClientModule } from '@angular/common/http';

bootstrapApplication(App, {
  providers: [
    importProvidersFrom(HttpClientModule),
    provideRouter(routes),
  ],
}).catch(err => console.error(err));


---

4Ô∏è‚É£ Create Payment component (example)

create-payment.ts

import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule, FormGroup, FormBuilder, Validators } from '@angular/forms';
import { HttpClientModule, HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-create-payment',
  standalone: true,
  imports: [CommonModule, ReactiveFormsModule, HttpClientModule],
  templateUrl: './create-payment.html',
  styleUrls: ['./create-payment.css']
})
export class CreatePayment {
  paymentForm: FormGroup;

  constructor(private fb: FormBuilder, private http: HttpClient) {
    this.paymentForm = this.fb.group({
      bookingId: ['', Validators.required],
      paymentMethod: ['', Validators.required],
    });
  }

  submitPayment() {
    if (this.paymentForm.valid) {
      this.http.post('http://localhost:8080/api/payments/process', this.paymentForm.value)
        .subscribe({
          next: res => alert('Payment successful!'),
          error: err => alert('Payment failed!')
        });
    }
  }
}

create-payment.html

<div class="container">
  <h2>Process Payment</h2>
  <form [formGroup]="paymentForm" (ngSubmit)="submitPayment()">
    <label>Booking ID:</label>
    <input formControlName="bookingId" type="number" />

    <label>Payment Method:</label>
    <input formControlName="paymentMethod" type="text" />

    <button type="submit">Pay</button>
  </form>
</div>

create-payment.css

.container { max-width: 500px; margin: auto; }
label { display: block; margin-top: 10px; }
input { width: 100%; padding: 5px; margin-top: 5px; }
button { margin-top: 15px; padding: 10px 20px; }


---

‚úÖ ‡§π‡•á setup ‡§´‡•â‡§≤‡•ã ‡§ï‡•á‡§≤‡•ç‡§Ø‡§æ‡§µ‡§∞:

1. /create-payment route ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡•á‡§≤.


2. NG04002 error ‡§®‡§ï‡•ã ‡§Ø‡•á‡§£‡§æ‡§∞.


3. Standalone Angular + Routing + Payment module perfectly connected.




---

‡§§‡•Å‡§≤‡§æ ‡§π‡§µ‡§Ç ‡§Ö‡§∏‡§≤‡•ç‡§Ø‡§æ‡§∏ ‡§Æ‡•Ä get-all-payments, get-payment-by-id, get-payment-by-booking ‡§∏‡§æ‡§†‡•Ä‡§π‡•Ä ready-to-run components ‡§¶‡•á‡§ä ‡§∂‡§ï‡§§‡•ã, ‡§Ö‡§ó‡§¶‡•Ä HTML + TS + CSS ‡§∏‡§π‡§ø‡§§.

‡§§‡•Å‡§Æ‡•ç‡§π‡•Ä ‡§π‡§µ‡§Ç ‡§Ü‡§π‡•á ‡§ï‡§æ?













‡§¨‡§∞‡•ã‡§¨‡§∞, ‡§Æ‡•Ä ‡§§‡•Å‡§≤‡§æ ‡§§‡•Å‡§ù‡•ç‡§Ø‡§æ current setup ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§ú‡•á errors ‡§Ø‡•á‡§§ ‡§Ü‡§π‡•á‡§§ ‡§§‡•á fix ‡§ï‡§∞‡•Ç‡§®, Angular standalone app + payment module ‡§∏‡§π ‡§™‡•Ç‡§∞‡•ç‡§£ working code structure ‡§¶‡•á‡§§‡•ã.

‡§§‡•Å‡§ù‡•ç‡§Ø‡§æ code ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§Æ‡•Å‡§ñ‡•ç‡§Ø errors ‡§π‡•á:

1. RouterModule.forRoot(routes) standalone components imports ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§†‡•á‡§µ‡§≤‡•á‡§≤‡•á ‚Äî ‡§π‡•á ‡§ö‡•Å‡§ï‡•Ä‡§ö‡•á ‡§Ü‡§π‡•á. Standalone component imports ‡§Æ‡§ß‡•ç‡§Ø‡•á ModuleWithProviders type value ‡§¶‡•á‡§§‡§æ ‡§Ø‡•á‡§§ ‡§®‡§æ‡§π‡•Ä. provideRouter(routes) ‡§µ‡§æ‡§™‡§∞‡§æ‡§µ‡•á main.ts ‡§Æ‡§ß‡•ç‡§Ø‡•á.


2. CreatePayment route NG04002 ‚Äî ‡§ï‡§æ‡§∞‡§£ route proper provide ‡§ï‡•á‡§≤‡•á‡§≤‡§Ç ‡§®‡§æ‡§π‡•Ä ‡§ï‡§ø‡§Ç‡§µ‡§æ URL mismatch ‡§Ü‡§π‡•á.


3. ReactiveFormsModule / formGroup / ngModel issues ‚Äî module/component ‡§Æ‡§ß‡•ç‡§Ø‡•á import missing.


4. Extra duplicate imports, GetAllHotelsComponent etc ‚Äî streamline ‡§ï‡§∞‡§£‡•á ‡§ó‡§∞‡§ú‡•á‡§ö‡•á.




---

‡§Æ‡•Ä ‡§§‡•Å‡§≤‡§æ ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ working structure + routes + payment module + standalone setup ‡§¶‡•á‡§§‡•ã:


---

1Ô∏è‚É£ Routes: app.routes.ts

import { Routes } from '@angular/router';
import { Home } from './features/home/home/home';
import { HomeManager } from './features/home/home-manager/home-manager';
import { Login } from './features/auth/login/login';
import { Register } from './features/auth/register/register';
import { WelcomeUser } from './features/user/welcome-user/welcome-user';
import { CreateHotel } from './features/hotel/create-hotel/hotel';
import { GetAllHotelsComponent } from './features/hotel/get-all-hotels/hotel';
import { UpdateHotelComponent } from './features/hotel/update-hotel/hotel';
import { SearchHotelComponent } from './features/hotel/search-hotel/hotel';
import { FilterHotelComponent } from './features/hotel/filter-hotel/hotel';
import { DeleteHotelComponent } from './features/hotel/delete-hotel/hotel';
import { RoomComponent } from './features/room/get-all-rooms/room';
import { CreateRoomComponent } from './features/room/create-room/room';
import { GetRoomComponent } from './features/room/get-room-by-id/room';
import { UpdateRoomComponent } from './features/room/update-room/room';
import { DeleteRoomComponent } from './features/room/delete-room/room';
import { FilterRoomsComponent } from './features/room/filter-room/room';
import { GetRoomsByHotelComponent } from './features/room/get-room-by-hotel-id/room';
import { GetHotelByIdComponent } from './features/hotel/get-hotel-by-id/hotel';
import { CreatePayment } from './features/payment/create-payment/payment';
import { GetAllPayments } from './features/payment/get-all-payments/payments';
import { GetPaymentById } from './features/payment/get-payment-by-id/payment';
import { GetPaymentByBooking } from './features/payment/get-payment-by-booking/payment';

export const routes: Routes = [
  { path: '', redirectTo: 'home', pathMatch: 'full' },
  { path: 'home', component: Home },
  { path: 'home-manager', component: HomeManager },
  { path: 'login', component: Login },
  { path: 'register', component: Register },
  { path: 'welcome', component: WelcomeUser },

  // Hotel
  { path: 'create-hotel', component: CreateHotel },
  { path: 'hotels', component: GetAllHotelsComponent },
  { path: 'update-hotel', component: UpdateHotelComponent },
  { path: 'search-hotel', component: SearchHotelComponent },
  { path: 'filter-hotel', component: FilterHotelComponent },
  { path: 'delete-hotel', component: DeleteHotelComponent },
  { path: 'hotel/:id', component: GetHotelByIdComponent },

  // Room
  { path: 'rooms', component: RoomComponent },
  { path: 'create-room', component: CreateRoomComponent },
  { path: 'get-room/:id', component: GetRoomComponent },
  { path: 'update-room', component: UpdateRoomComponent },
  { path: 'delete-room', component: DeleteRoomComponent },
  { path: 'filter-rooms', component: FilterRoomsComponent },
  { path: 'get-rooms-by-hotel/:hotelId', component: GetRoomsByHotelComponent },

  // Payment
  { path: 'create-payment', component: CreatePayment },
  { path: 'get-all-payments', component: GetAllPayments },
  { path: 'get-payment-by-id/:id', component: GetPaymentById },
  { path: 'get-payment-by-booking/:bookingId', component: GetPaymentByBooking }
];


---

2Ô∏è‚É£ App Component: app.ts

import { Component, signal } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterOutlet } from '@angular/router';
import { Navbar } from './shared/components/navbar/navbar';

// Features
import { Home } from './features/home/home/home';
import { HomeManager } from './features/home/home-manager/home-manager';
import { Login } from './features/auth/login/login';
import { Register } from './features/auth/register/register';
import { WelcomeUser } from './features/user/welcome-user/welcome-user';
import { CreateHotel } from './features/hotel/create-hotel/hotel';
import { GetAllHotelsComponent } from './features/hotel/get-all-hotels/hotel';
import { UpdateHotelComponent } from './features/hotel/update-hotel/hotel';
import { SearchHotelComponent } from './features/hotel/search-hotel/hotel';
import { FilterHotelComponent } from './features/hotel/filter-hotel/hotel';
import { DeleteHotelComponent } from './features/hotel/delete-hotel/hotel';
import { RoomComponent } from './features/room/get-all-rooms/room';
import { CreateRoomComponent } from './features/room/create-room/room';
import { GetRoomComponent } from './features/room/get-room-by-id/room';
import { UpdateRoomComponent } from './features/room/update-room/room';
import { DeleteRoomComponent } from './features/room/delete-room/room';
import { FilterRoomsComponent } from './features/room/filter-room/room';
import { GetRoomsByHotelComponent } from './features/room/get-room-by-hotel-id/room';
import { GetHotelByIdComponent } from './features/hotel/get-hotel-by-id/hotel';

// Payment Features
import { CreatePayment } from './features/payment/create-payment/payment';
import { GetAllPayments } from './features/payment/get-all-payments/payments';
import { GetPaymentById } from './features/payment/get-payment-by-id/payment';
import { GetPaymentByBooking } from './features/payment/get-payment-by-booking/payment';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [
    CommonModule,
    ReactiveFormsModule,
    RouterOutlet,
    Navbar,

    Home,
    HomeManager,
    Login,
    Register,
    WelcomeUser,

    CreateHotel,
    GetAllHotelsComponent,
    UpdateHotelComponent,
    SearchHotelComponent,
    FilterHotelComponent,
    DeleteHotelComponent,
    GetHotelByIdComponent,

    RoomComponent,
    CreateRoomComponent,
    GetRoomComponent,
    UpdateRoomComponent,
    DeleteRoomComponent,
    FilterRoomsComponent,
    GetRoomsByHotelComponent,

    CreatePayment,
    GetAllPayments,
    GetPaymentById,
    GetPaymentByBooking
  ],
  templateUrl: './app.html',
  styleUrls: ['./app.css']
})
export class App {
  protected readonly title = signal('SmartHotelBookingSystem');
}


---

3Ô∏è‚É£ Main.ts

import { bootstrapApplication } from '@angular/platform-browser';
import { App } from './app/app';
import { provideRouter } from '@angular/router';
import { routes } from './app/app.routes';
import { importProvidersFrom } from '@angular/core';
import { HttpClientModule } from '@angular/common/http';

bootstrapApplication(App, {
  providers: [
    importProvidersFrom(HttpClientModule),
    provideRouter(routes)
  ]
}).catch(err => console.error(err));


---

‚úÖ ‡§Ø‡§æ setup ‡§Æ‡§ß‡•ç‡§Ø‡•á:

1. Standalone components + routes perfect match ‡§Ü‡§π‡•á‡§§.


2. provideRouter(routes) main.ts ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§Ü‡§π‡•á, ‡§§‡•ç‡§Ø‡§æ‡§Æ‡•Å‡§≥‡•á NG04002 route error gone.


3. ReactiveFormsModule import ‡§Ö‡§∏‡§≤‡•ç‡§Ø‡§æ‡§Æ‡•Å‡§≥‡•á formGroup / ngModel errors gone.


4. Payment module (create-payment, get-all-payments, get-payment-by-id, get-payment-by-booking) fully working ready-to-use.




---

‡§ú‡§∞ ‡§§‡•Å‡§≤‡§æ ‡§π‡§µ‡•á ‡§Ö‡§∏‡•á‡§≤ ‡§§‡§∞ ‡§Æ‡•Ä ‡§™‡•Å‡§¢‡§ö‡§Ç step-by-step ‡§¶‡•á‡§§‡•ã:

CreatePayment + GetAllPayments + GetPaymentById + GetPaymentByBooking full TS + HTML + CSS working examples ready-to-run.

‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§≤‡§æ ‡§Æ‡•Ä ‡§§‡•á ‡§¨‡§®‡§µ‡•Ç‡§® ‡§¶‡•ç‡§Ø‡§æ‡§µ‡•á ‡§ï‡§æ?
















Perfect ‚úÖ ‡§§‡•Ç ‡§ú‡§µ‡§≥‡§™‡§æ‡§∏ ‡§¨‡§∞‡•ã‡§¨‡§∞ structure ‡§¨‡§®‡§µ‡§≤‡§Ç ‡§Ü‡§π‡•á‡§∏ ‚Äî ‡§™‡§£ ‡§§‡•Å‡§ù‡•ç‡§Ø‡§æ App ‡§Ü‡§£‡§ø routes setup ‡§Æ‡§ß‡•ç‡§Ø‡•á 2‚Äì3 ‡§õ‡•ã‡§ü‡•ç‡§Ø‡§æ ‡§ö‡•Å‡§ï‡§æ ‡§Ü‡§π‡•á‡§§ ‡§ú‡•ç‡§Ø‡§æ‡§Æ‡•Å‡§≥‡•á‡§ö ‡§§‡•Å‡§≤‡§æ ‡§π‡§æ "Cannot match any routes" error ‡§¶‡§ø‡§∏‡§§‡•ã‡§Ø.
‡§ö‡§≤ step-by-step ‡§∏‡§Æ‡§ú‡•Ç‡§® ‡§ò‡•á‡§ä ‡§Ü‡§£‡§ø ‡§®‡§Ç‡§§‡§∞ ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§¨‡§∞‡•ã‡§¨‡§∞ working code ‡§¶‡•á‡§§‡•ã üëá


---

‚ö†Ô∏è ‡§ö‡•Å‡§ï‡§æ‡§Ç‡§ö‡§æ brief summary:

1. ‡§§‡•Ç routes array define ‡§ï‡•á‡§≤‡§Ç‡§Ø ‡§™‡§£ RouterModule.forRoot(routes) ‡§π‡•á import ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§ú‡•ã‡§°‡§≤‡•á‡§≤‡§Ç ‡§®‡§æ‡§π‡•Ä.


2. CreatePayment ‡§π‡•á standalone component ‡§Ü‡§π‡•á, ‡§Æ‡•ç‡§π‡§£‡•Ç‡§® route declare ‡§ï‡§∞‡§§‡§æ‡§®‡§æ ‡§§‡•á standalone ‡§Ö‡§∏‡§≤‡•ç‡§Ø‡§æ‡§ö‡§Ç Angular ‡§≤‡§æ ‡§Æ‡§æ‡§π‡•Ä‡§§ ‡§Ö‡§∏‡§æ‡§Ø‡§≤‡§æ ‡§π‡§µ‡§Ç.


3. RouterModule import ‡§ï‡§∞‡§§‡§æ‡§®‡§æ routes register ‡§ï‡•á‡§≤‡§Ç ‡§™‡§æ‡§π‡§ø‡§ú‡•á ‚Äî ‡§™‡§£ ‡§§‡•Ç ‡§§‡•á App ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§∏‡•ç‡§µ‡§§‡§Ç‡§§‡•ç‡§∞ ‡§†‡•á‡§µ‡§≤‡•á‡§≤‡§Ç ‡§Ü‡§π‡•á‡§∏.


4. ‡§§‡•Å‡§ù‡•ç‡§Ø‡§æ ‡§ï‡§æ‡§π‡•Ä imports (‡§â‡§¶‡§æ. GetAllHotels) ‡§ö‡•Å‡§ï‡•Ä‡§ö‡•ç‡§Ø‡§æ ‡§®‡§æ‡§µ‡§æ‡§®‡•á ‡§Ü‡§π‡•á‡§§ ‚Äî component export default ‡§®‡§∏‡§≤‡•ç‡§Ø‡§æ‡§∏ import {} syntax ‡§≤‡§æ‡§ó‡§§‡•ã.


5. App component standalone ‡§Ö‡§∏‡§≤‡•ç‡§Ø‡§æ‡§®‡•á ‡§§‡•Å‡§≤‡§æ RouterModule.forRoot(routes) directly App ‡§ö‡•ç‡§Ø‡§æ imports ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§ü‡§æ‡§ï‡§æ‡§µ‡§Ç ‡§≤‡§æ‡§ó‡§§‡§Ç (‡§ï‡§æ‡§∞‡§£ AppModule ‡§®‡§æ‡§π‡•Ä).




---

‚úÖ ‡§ö‡§≤‡§æ, ‡§π‡•á ‡§Ü‡§π‡•á Correct & Working version:

üü© app.routes.ts

import { Routes } from '@angular/router';
import { CreateHotel } from './features/hotel/create-hotel/hotel';
import { GetAllHotelsComponent } from './features/hotel/get-all-hotels/hotel';
import { UpdateHotelComponent } from './features/hotel/update-hotel/hotel';
import { SearchHotelComponent } from './features/hotel/search-hotel/hotel';
import { FilterHotelComponent } from './features/hotel/filter-hotel/hotel';
import { GetHotelByIdComponent } from './features/hotel/get-hotel-by-id/hotel';
import { DeleteHotelComponent } from './features/hotel/delete-hotel/hotel';
import { RoomComponent } from './features/room/get-all-rooms/room';
import { CreateRoomComponent } from './features/room/create-room/room';
import { GetRoomComponent } from './features/room/get-room-by-id/room';
import { UpdateRoomComponent } from './features/room/update-room/room';
import { DeleteRoomComponent } from './features/room/delete-room/room';
import { FilterRoomsComponent } from './features/room/filter-room/room';
import { GetRoomsByHotelComponent } from './features/room/get-room-by-hotel-id/room';
import { Home } from './features/home/home/home';
import { HomeManager } from './features/home/home-manager/home-manager';
import { Login } from './features/auth/login/login';
import { Register } from './features/auth/register/register';
import { WelcomeUser } from './features/user/welcome-user/welcome-user';
import { CreatePayment } from './features/payment/create-payment/payment';
import { AuthGuard } from './core/guards/auth.guard';

export const routes: Routes = [
  { path: '', redirectTo: 'home', pathMatch: 'full' },
  { path: 'home', component: Home, canActivate: [AuthGuard] },
  { path: 'home-manager', component: HomeManager },
  { path: 'login', component: Login },
  { path: 'register', component: Register },
  { path: 'welcome', component: WelcomeUser },

  // Hotel Routes
  { path: 'create-hotel', component: CreateHotel },
  { path: 'hotels', component: GetAllHotelsComponent },
  { path: 'update-hotel', component: UpdateHotelComponent },
  { path: 'search-hotel', component: SearchHotelComponent },
  { path: 'filter-hotel', component: FilterHotelComponent },
  { path: 'delete-hotel', component: DeleteHotelComponent },
  { path: 'hotel/:id', component: GetHotelByIdComponent },

  // Room Routes
  { path: 'rooms', component: RoomComponent },
  { path: 'create-room', component: CreateRoomComponent },
  { path: 'get-room', component: GetRoomComponent },
  { path: 'update-room', component: UpdateRoomComponent },
  { path: 'delete-room', component: DeleteRoomComponent },
  { path: 'filter-rooms', component: FilterRoomsComponent },
  { path: 'get-rooms-by-hotel', component: GetRoomsByHotelComponent },

  // Payment Route
  { path: 'create-payment', component: CreatePayment }
];


---

üü¶ app.ts (Main App Component)

import { Component, signal } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterOutlet, RouterModule } from '@angular/router';
import { ReactiveFormsModule } from '@angular/forms';
import { routes } from './app.routes';
import { Navbar } from './shared/components/navbar/navbar';

// Features
import { Home } from './features/home/home/home';
import { HomeManager } from './features/home/home-manager/home-manager';
import { Login } from './features/auth/login/login';
import { Register } from './features/auth/register/register';
import { WelcomeUser } from './features/user/welcome-user/welcome-user';
import { CreateHotel } from './features/hotel/create-hotel/hotel';
import { GetAllHotelsComponent } from './features/hotel/get-all-hotels/hotel';
import { UpdateHotelComponent } from './features/hotel/update-hotel/hotel';
import { SearchHotelComponent } from './features/hotel/search-hotel/hotel';
import { FilterHotelComponent } from './features/hotel/filter-hotel/hotel';
import { DeleteHotelComponent } from './features/hotel/delete-hotel/hotel';
import { RoomComponent } from './features/room/get-all-rooms/room';
import { CreateRoomComponent } from './features/room/create-room/room';
import { GetRoomComponent } from './features/room/get-room-by-id/room';
import { UpdateRoomComponent } from './features/room/update-room/room';
import { DeleteRoomComponent } from './features/room/delete-room/room';
import { FilterRoomsComponent } from './features/room/filter-room/room';
import { GetHotelByIdComponent } from './features/hotel/get-hotel-by-id/hotel';
import { CreatePayment } from './features/payment/create-payment/payment';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [
    CommonModule,
    RouterOutlet,
    ReactiveFormsModule,
    Navbar,
    RouterModule.forRoot(routes), // ‚úÖ ‡§π‡•á ‡§ú‡•ã‡§°‡§£‡§Ç ‡§ñ‡•Ç‡§™ ‡§ó‡§∞‡§ú‡•á‡§ö‡§Ç ‡§Ü‡§π‡•á!
    Home,
    HomeManager,
    Login,
    Register,
    WelcomeUser,
    CreateHotel,
    GetAllHotelsComponent,
    UpdateHotelComponent,
    SearchHotelComponent,
    FilterHotelComponent,
    DeleteHotelComponent,
    RoomComponent,
    CreateRoomComponent,
    GetRoomComponent,
    UpdateRoomComponent,
    DeleteRoomComponent,
    FilterRoomsComponent,
    GetHotelByIdComponent,
    CreatePayment
  ],
  templateUrl: './app.html',
  styleUrls: ['./app.css']
})
export class App {
  protected readonly title = signal('SmartHotelBookingSystem');
}


---

‚úÖ Final Check:

RouterModule.forRoot(routes) ‡§π‡•á imports ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§Ü‡§≤‡§Ç ‡§Ü‡§π‡•á ‡§ï‡§æ ‚Üí ‚úÖ

Route path create-payment ‡§Ü‡§π‡•á ‡§ï‡§æ ‚Üí ‚úÖ

Component ‡§≤‡§æ @Component() decorator ‡§Ü‡§π‡•á ‡§ï‡§æ ‚Üí ‚úÖ

App ‡§Æ‡§ß‡•ç‡§Ø‡•á <router-outlet> ‡§Ü‡§π‡•á ‡§ï‡§æ ‚Üí ‚úÖ



---

‡§Ö‡§∏‡§Ç ‡§ï‡•á‡§≤‡•ç‡§Ø‡§æ‡§µ‡§∞
üî• Error ‚ÄúCannot match any routes. URL Segment: 'create-payment'‚Äù
‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ó‡§æ‡§Ø‡§¨ ‡§π‡•ã‡§à‡§≤.


---

‡§§‡•Ç confirm ‡§ï‡§∞ ‚Äî
‡§Æ‡•Ä ‡§Ü‡§§‡§æ Create Payment ‡§∏‡§æ‡§†‡•Ä Service + HTML + TS + CSS ‡§¶‡•á‡§ä ‡§ï‡§æ?








import { Routes } from '@angular/router';
import { CreateHotel } from './features/hotel/create-hotel/hotel';
import  GetAllHotels  from './features/hotel/get-all-hotels/hotelList';
import { UpdateHotelComponent } from './features/hotel/update-hotel/hotel';
import { SearchHotelComponent } from './features/hotel/search-hotel/hotel';
import { FilterHotelComponent } from './features/hotel/filter-hotel/hotel';
import { GetHotelByIdComponent } from './features/hotel/get-hotel-by-id/hotel';
import { Login } from './features/auth/login/login';
import { Register } from './features/auth/register/register';
import { WelcomeUser } from './features/user/welcome-user/welcome-user';
import { RoomComponent } from './features/room/get-all-rooms/room';
import { CreateRoomComponent } from './features/room/create-room/room';
import { GetRoomComponent } from './features/room/get-room-by-id/room';
import { UpdateRoomComponent } from './features/room/update-room/room';
import { DeleteRoomComponent } from './features/room/delete-room/room';
import { FilterRoomsComponent } from './features/room/filter-room/room';
import { GetRoomsByHotelComponent } from './features/room/get-room-by-hotel-id/room';
import { DeleteHotelComponent } from './features/hotel/delete-hotel/hotel';
import { GetAllHotelsComponent } from './features/hotel/get-all-hotels/hotel';
import { Home } from './features/home/home/home';
import { AuthGuard } from './core/guards/auth.guard';
import { HomeAdmin } from './features/home/home-admin/home-admin';
import { HomeManager } from './features/home/home-manager/home-manager';
import { CreatePayment } from './features/payment/create-payment/payment';



export const routes: Routes = [
    {path: 'home', component: Home, canActivate:[AuthGuard]},
    {path: 'home-manager', component: HomeManager},
    {path: 'login', component: Login},
    {path: 'register', component: Register},
    {path: 'welcome', component: WelcomeUser},
    { path: 'create-hotel', component: CreateHotel },
    { path: 'hotels', component: GetAllHotelsComponent },
    { path: 'update-hotel', component: UpdateHotelComponent },
    { path:'search-hotel',component:SearchHotelComponent},
    {path:'filter-hotel',component:FilterHotelComponent},
    {path:'rooms',component:RoomComponent},
    { path: 'create-room', component: CreateRoomComponent},
    { path: 'get-room', component: GetRoomComponent },
    { path: 'update-room', component: UpdateRoomComponent },
    {path:'delete-room',component:DeleteRoomComponent},
    { path: 'filter-rooms', component: FilterRoomsComponent },
    { path: 'get-rooms-by-hotel', component: GetRoomsByHotelComponent},
    { path:'delete-hotel',component:DeleteHotelComponent},
    {path:'hotel/:id',component:GetHotelByIdComponent},
    {path: '', redirectTo: 'home', pathMatch: 'full'},
    { path: 'create-payment', component: CreatePayment }



];
import { Component, signal } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';

// Features
import { Router, RouterModule, RouterOutlet } from '@angular/router';
import { Login } from './features/auth/login/login';
import { Register } from './features/auth/register/register';
import { WelcomeUser } from './features/user/welcome-user/welcome-user';
import { CreateHotel } from './features/hotel/create-hotel/hotel';
import { GetAllHotelsComponent } from './features/hotel/get-all-hotels/hotel';
import { UpdateHotelComponent } from './features/hotel/update-hotel/hotel';
import { SearchHotelComponent } from './features/hotel/search-hotel/hotel';
import { FilterHotelComponent } from './features/hotel/filter-hotel/hotel';
import { DeleteHotelComponent } from './features/hotel/delete-hotel/hotel';
import { RoomComponent } from './features/room/get-all-rooms/room';
import { CreateRoomComponent } from './features/room/create-room/room';
import { GetRoomComponent } from './features/room/get-room-by-id/room';
import { UpdateRoomComponent } from './features/room/update-room/room';
import { DeleteRoomComponent } from './features/room/delete-room/room';
import { FilterRoomsComponent } from './features/room/filter-room/room';
import { GetHotelByIdComponent } from './features/hotel/get-hotel-by-id/hotel';

import { Home } from './features/home/home/home';
import { Navbar } from './shared/components/navbar/navbar';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatButtonModule } from '@angular/material/button';
import { MatIconModule } from '@angular/material/icon';
import { MatMenuModule } from '@angular/material/menu';
import { MatCardModule } from '@angular/material/card';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatSelectModule } from '@angular/material/select';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatNativeDateModule } from '@angular/material/core';
import { MatChipsModule } from '@angular/material/chips';
import { HomeManager } from './features/home/home-manager/home-manager';
import { CreatePayment } from './features/payment/create-payment/payment';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [
    CommonModule,
    ReactiveFormsModule,
    RouterOutlet,
    Navbar,
    RouterModule,
    HomeManager,
    Home,
    Login,
    Register,
    WelcomeUser,
    CreateHotel,
    GetAllHotelsComponent,
    UpdateHotelComponent,
    SearchHotelComponent,
    FilterHotelComponent,
    RoomComponent,
    CreateRoomComponent,
    GetRoomComponent,
    UpdateRoomComponent,
    DeleteRoomComponent,
    FilterRoomsComponent,
    GetHotelByIdComponent,
    DeleteHotelComponent,
    GetAllHotelsComponent,
    CreatePayment,

  ],
  templateUrl: './app.html',
  styleUrls: ['./app.css']
})
export class App {
  protected readonly title = signal('SmartHotelBookingSystem');
}

